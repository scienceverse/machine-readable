{
    "name": "Kinship and Prosocial Behaviour",
    "info": {
        "abstract": "A reanalysis of data from DeBruine (2002) Facial Resemblance Enhances Trust, PRSLB."
    },
    "authors": [
        {
            "orcid": "0000-0002-7523-5539",
            "name": {
                "surname": "DeBruine",
                "given": "Lisa M."
            },
            "roles": [
                "Conceptualization",
                "Data curation",
                "Software",
                "Writing - original draft",
                "Writing - review & editing"
            ],
            "email": "lisa.debruine@glasgow.ac.uk"
        },
        {
            "orcid": "0000-0002-0247-239X",
            "name": {
                "surname": "Lakens",
                "given": "DaniÃ«l"
            },
            "roles": [
                "Conceptualization",
                "Formal analysis",
                "Writing - original draft",
                "Writing - review & editing"
            ]
        }
    ],
    "hypotheses": [
        {
            "id": "self_pref",
            "description": "Cues of kinship will increase prosocial behaviour. Cues of kinship will be manipulated by morphed facial self-resemblance. Prosocial behaviour will be measured by responses in the trust game. The prediction is that the number of trusting AND/OR reciprocating moves will be greater to self morphs than to other morphs.",
            "criteria": [
                {
                    "id": "t_lo",
                    "analysis_id": "trust",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": true
                },
                {
                    "id": "t_hi",
                    "analysis_id": "trust",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo",
                    "analysis_id": "recip",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi",
                    "analysis_id": "recip",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "ts_norm",
                    "analysis_id": "norm",
                    "result": "ts",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "to_norm",
                    "analysis_id": "norm",
                    "result": "to",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "rs_norm",
                    "analysis_id": "norm",
                    "result": "rs",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "ro_norm",
                    "analysis_id": "norm",
                    "result": "ro",
                    "operator": ">",
                    "comparator": 0.05,
                    "conclusion": false
                },
                {
                    "id": "t_lo_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "t_hi_w",
                    "analysis_id": "trust_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                },
                {
                    "id": "r_lo_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[1]",
                    "operator": ">",
                    "comparator": 0,
                    "conclusion": false
                },
                {
                    "id": "r_hi_w",
                    "analysis_id": "recip_wilcox",
                    "result": "conf.int[2]",
                    "operator": ">",
                    "comparator": 0.2,
                    "conclusion": true
                }
            ],
            "corroboration": {
                "description": "The hypothesis is corroborated if the 97.5% CI lower bound is greater than 0 and the 97.5% CI upper bound is greater than 0.2 (the SESOI) for either the trust or reciprocation moves. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "(ts_norm & to_norm & t_lo & t_hi) | \n                   (!(ts_norm & to_norm) & t_lo_w & t_hi_w) | \n                   (rs_norm & ro_norm & r_lo & r_hi) | \n                   (!(rs_norm & ro_norm) & r_lo_w & r_hi_w)",
                "result": false
            },
            "falsification": {
                "description": "The hypothesis is falsified if the 97.5% CI upper bound is smaller than 0.2 (the SESOI) for both trust and reciprocation. Use t.test if the data are normally distributed, or Wilcox test otherwise.",
                "evaluation": "( (ts_norm & to_norm & !t_hi) |\n                     (!(ts_norm & to_norm) & !t_hi_w) ) & \n                   ( (rs_norm & ro_norm & !r_hi) |\n                     (!(rs_norm & ro_norm) & !r_hi_w) )",
                "result": false
            },
            "power": {
                "corroboration": 0.45,
                "falsification": 0,
                "inconclusive": 0.55,
                "criteria": {
                    "t_lo": [0.1415, -0.1747, -0.0844, 0.0518, -0.1829, 0.274, 0.0677, -0.0862, 0.444, 0.0559, -0.1069, -0.1198, 0.3404, -0.0312, -0.0132, -0.0328, 0.1204, -0.1211, -0.206, -0.1335, 0.0796, 0.0226, -0.0898, -0.0018, -0.0316, 0.1508, -0.2055, 0.158, 0.1319, 0.2816, -0.2144, 0.1686, -0.0168, -0.0565, -0.2763, -0.0437, 0.0612, 0.0733, 0.392, 0.1719, -0.2984, 0.144, -0.0321, 0.0827, 0.0421, -0.1273, -0.1288, 0.0439, 0.0155, 0.1066, -0.1695, -0.0255, -0.0049, 0.5841, -0.059, -0.0901, -0.1695, 0.0676, -0.0855, 0.1148, -0.0637, -0.0855, 0.145, 0.2495, -0.1589, 0.2824, -0.035, -0.1899, -0.0782, 0.0632, -0.0171, -0.0396, -0.0486, -0.1872, 0.119, -0.1897, 0.0054, -0.167, -0.3868, 0.3207, 0.1152, 0.0552, 0.0107, -0.3577, -0.0089, -0.0836, -0.0675, -0.1961, -0.327, -0.0114, 0.108, 0.1041, 0.127, 0.036, 0.1021, -0.035, 0.2305, 0.1202, -0.1893, -0.0315],
                    "t_hi": [0.995, 0.5961, 0.5942, 0.8383, 0.5364, 0.9983, 0.8433, 0.579, 1.2061, 0.9839, 0.6153, 0.6197, 1.0804, 0.9244, 0.7262, 0.7349, 0.8371, 0.5977, 0.6824, 0.7193, 0.6814, 0.7985, 0.5989, 0.8578, 0.5274, 0.9566, 0.6372, 0.986, 0.9446, 0.9894, 0.7984, 0.8887, 0.6127, 0.8369, 0.5562, 0.7039, 0.7068, 0.8052, 0.9154, 1.0068, 0.6141, 0.8698, 0.829, 0.7953, 0.7685, 0.7577, 0.57, 0.7869, 0.734, 0.8264, 0.8516, 0.6456, 0.8335, 1.5057, 0.6699, 0.5244, 0.5344, 0.8696, 0.7185, 0.7842, 0.9114, 0.869, 0.7795, 0.9443, 0.6972, 0.9143, 0.6596, 0.8023, 0.7994, 0.6685, 0.9897, 0.9768, 0.7148, 0.6738, 0.7486, 0.6261, 0.6833, 0.6714, 0.4868, 1.1114, 0.9544, 0.8698, 0.6486, 0.5625, 0.8697, 0.7277, 0.5877, 0.5898, 0.3119, 0.7276, 0.8606, 0.9274, 0.8677, 0.8426, 0.6307, 0.9403, 0.8818, 0.5618, 0.6691, 0.7498],
                    "r_lo": [-0.3308, -0.387, -0.4949, -0.3292, -0.3746, -0.3268, -0.2518, -0.4191, -0.5964, -0.3126, -0.5892, -0.5264, -0.4226, -0.2113, -0.3499, -0.1163, -0.3008, -0.5385, -0.6038, -0.6858, -0.2945, -0.3872, -0.4216, -0.5044, -0.3383, -0.6328, -0.4052, -0.2796, -0.5646, -0.1928, -0.5049, -0.5699, -0.1804, -0.1283, -0.5019, -0.6315, -0.6618, -0.391, -0.3, -0.4029, -0.3019, -0.7205, -0.5418, -0.2744, -0.1936, -0.4793, -0.2745, -0.4113, -0.5704, -0.6064, -0.5868, -0.2661, -0.4396, -0.3304, -0.5116, -0.2427, -0.7246, -0.5077, -0.1645, -0.2705, -0.4248, -0.4098, -0.4206, -0.3481, -0.3189, -0.5594, -0.3917, -0.7254, -0.0958, -0.4013, -0.4703, -0.2919, -0.4221, -0.1339, -0.3395, -0.2813, -0.2646, -0.3409, -0.2694, -0.3098, -0.4043, -0.4815, -0.3932, -0.4476, -0.4927, -0.378, -0.5868, -0.4086, -0.3346, -0.5303, -0.4461, -0.1752, -0.2011, -0.6108, -0.2346, -0.3163, -0.4341, -0.138, -0.3773, -0.5804],
                    "r_hi": [0.4632, 0.2167, 0.3348, 0.4021, 0.3384, 0.5464, 0.4939, 0.2984, 0.1239, 0.465, 0.3514, 0.3219, 0.3696, 0.5658, 0.4824, 0.6956, 0.4705, 0.2233, 0.1682, -0.0954, 0.5003, 0.3797, 0.3794, 0.304, 0.2749, 0.0954, 0.364, 0.6715, 0.3609, 0.5544, 0.3854, 0.2438, 0.5203, 0.8294, 0.1856, 0.0718, 0.134, 0.4398, 0.4091, 0.4977, 0.3814, 0.2448, 0.2362, 0.5464, 0.52, 0.1992, 0.3985, 0.4889, 0.394, 0.1648, 0.3868, 0.5752, 0.3745, 0.5246, 0.3432, 0.5811, 0.0826, 0.3263, 0.6536, 0.5596, 0.5066, 0.3907, 0.1409, 0.4781, 0.4043, 0.2, 0.4596, 0.0365, 0.6148, 0.303, 0.1283, 0.4188, 0.388, 0.6891, 0.3446, 0.4295, 0.4771, 0.4506, 0.48, 0.542, 0.4272, 0.423, 0.2598, 0.4644, 0.4469, 0.5898, 0.2467, 0.4315, 0.7014, 0.224, 0.3236, 0.54, 0.5395, 0.35, 0.5416, 0.4315, 0.3411, 0.6322, 0.3329, 0.1133],
                    "ts_norm": [0.6529, 0.8203, 0.8798, 0.3456, 0.5251, 0.2262, 0.1988, 0.0973, 0.6714, 0.144, 0.8119, 0.8918, 0.1435, 0.5044, 0.6689, 0.4098, 0.9635, 0.9725, 0.0877, 0.5529, 0.3778, 0.1904, 0.3422, 0.2598, 0.7794, 0.2592, 0.1121, 0.7891, 0.5383, 0.6113, 0.429, 0.2764, 0.9648, 0.9259, 0.6582, 0.2283, 0.9087, 0.419, 0.4582, 0.23, 0.2861, 0.601, 0.8656, 0.758, 0.7781, 0.4987, 0.8943, 0.5163, 0.1742, 0.5399, 0.4369, 0.1505, 0.5507, 0.3679, 0.4022, 0.8965, 0.2727, 0.311, 0.0508, 0.7003, 0.708, 0.3566, 0.4827, 0.5988, 0.7654, 0.4175, 0.3878, 0.5753, 0.3552, 0.559, 0.4504, 0.9831, 0.7384, 0.3034, 0.5841, 0.239, 0.9461, 0.4352, 0.0305, 0.98, 0.7067, 0.4937, 0.68, 0.7018, 0.7488, 0.683, 0.5912, 0.123, 0.7497, 0.2046, 0.8254, 0.0745, 0.5778, 0.8258, 0.7403, 0.1894, 0.0022, 0.0082, 0.6984, 0.6492],
                    "to_norm": [0.9937, 0.7889, 0.4322, 0.4975, 0.9726, 0.0746, 0.9659, 0.7053, 0.9436, 0.4682, 0.5944, 0.8951, 0.0048, 0.4728, 0.03, 0.9818, 0.8025, 0.867, 0.6232, 0.5859, 0.4869, 0.371, 0.9765, 0.8945, 0.0054, 0.5541, 0.8645, 0.2553, 0.6711, 0.1135, 0.3979, 0.032, 0.1886, 0.1076, 0.5705, 0.9569, 0.8198, 0.3487, 0.1995, 0.9528, 0.8541, 0.5995, 0.4905, 0.9784, 0.056, 0.4472, 0.6252, 0.5258, 0.4723, 0.7695, 0.0755, 0.8996, 0.1531, 0.5376, 0.0071, 0.06, 0.5348, 0.9871, 0.2855, 0.5801, 0.6013, 0.3067, 0.7328, 0.6593, 0.5647, 0.646, 0.1167, 0.9725, 0.3861, 0.4344, 0.2869, 0.106, 0.6776, 0.1673, 0.4589, 0.1011, 0.7986, 0.446, 0.7686, 0.3952, 0.3062, 0.5649, 0.2404, 0.838, 0.8984, 0.9993, 0.1218, 0.0967, 0.3065, 0.9833, 0.5809, 0.4782, 0.7106, 0.1561, 0.4424, 0.1817, 0.1274, 0.0222, 0.5193, 0.3566],
                    "rs_norm": [0.2118, 0.9311, 0.0048, 0.1173, 0.7934, 0.6228, 0.8864, 0.9178, 0.0704, 0.7341, 0.9693, 0.1406, 0.7395, 0.7349, 0.7799, 0.7713, 0.7626, 0.541, 0.3573, 0.6888, 0.7397, 0.1651, 0.5539, 0.1784, 0.931, 0.3684, 0.5689, 0.2823, 0.3215, 0.7202, 0.6906, 0.9988, 0.4139, 0.2975, 0.0662, 0.852, 0.6037, 0.7399, 0.9943, 0.6596, 0.3563, 0.1502, 0.9081, 0.8968, 0.946, 0.7469, 0.4792, 0.6594, 0.8438, 0.9353, 0.1977, 0.8855, 0.4077, 0.0763, 0.298, 0.5153, 0.9744, 0.0241, 0.668, 0.9362, 0.7263, 0.8945, 0.44, 0.4886, 0.0879, 0.1717, 0.0087, 0.2297, 0.4876, 0.5034, 0.9372, 0.2646, 0.651, 0.8455, 0.0782, 0.1395, 0.8055, 0.2792, 0.1021, 0.5671, 0.2176, 0.5746, 0.9995, 0.5975, 0.51, 0.0738, 0.3796, 0.8897, 0.1574, 0.0131, 0.7493, 0.577, 0.2567, 0.2904, 0.0929, 0.4797, 0.8622, 0.0123, 0.4568, 0.1495],
                    "ro_norm": [0.8891, 0.5844, 0.0446, 0.4546, 0.0517, 0.3676, 0.597, 0.6368, 0.7795, 0.4939, 0.3077, 0.3097, 0.148, 0.2504, 0.9868, 0.2389, 0.4085, 0.2222, 0.3476, 0.8011, 0.551, 0.4638, 0.1828, 0.4465, 0.9981, 0.9414, 0.7254, 0.4928, 0.0573, 0.216, 0.6177, 0.938, 0.1661, 0.9024, 0.3972, 0.2378, 0.8787, 0.9819, 0.1725, 0.6825, 0.7244, 0.0854, 0.0404, 0.9621, 0.7457, 0.6948, 0.9179, 0.2835, 0.5989, 0.4194, 0.3667, 0.4509, 0.5204, 0.2527, 0.0041, 0.6884, 0.2522, 0.929, 0.5096, 0.494, 0.84, 0.4842, 0.8215, 0.8104, 0.559, 0.6126, 0.3995, 0.0698, 0.9411, 0.7328, 0.1342, 0.1092, 0.6328, 0.4612, 0.1977, 0.527, 0.6016, 0.3371, 0.9262, 0.5742, 0.4271, 0.0363, 0.7693, 0.6096, 0.9591, 0.5711, 0.5662, 0.1825, 0.8203, 0.4965, 0.2479, 0.8236, 0.0517, 0.6461, 0.1922, 0.0595, 0.359, 0.5766, 0.6394, 0.7546],
                    "t_lo_w": [0.1464, -0.1053, -0.0829, 0.0593, -0.1894, 0.2244, 0.0189, -0.1122, 0.4494, 0.0894, -0.1153, -0.1495, 0.3247, -0.0418, -0.0239, -0.002, 0.088, -0.0754, -0.2341, -0.1448, 0.069, 0.0093, -0.1052, 0.0073, -0.049, 0.1992, -0.2392, 0.1591, 0.0887, 0.2861, -0.1975, 0.1248, -0.0281, -0.0231, -0.2732, -0.0853, 0.0675, 0.0795, 0.3856, 0.1471, -0.3217, 0.1475, -0.0886, 0.0743, 0.0464, -0.1497, -0.1521, 0.0363, -0.0102, 0.0962, -0.1834, -0.0131, -0.0333, 0.6072, -0.038, -0.0701, -0.1853, 0.0915, -0.1163, 0.086, -0.0826, -0.1291, 0.1242, 0.2381, -0.1424, 0.3062, 0.0126, -0.1999, -0.1528, 0.0393, -0.0482, -0.0698, -0.0565, -0.1382, 0.1317, -0.1723, 0.0127, -0.1938, -0.3308, 0.3043, 0.1032, 0.121, 0.0206, -0.419, -0.0223, -0.0496, -0.0669, -0.1991, -0.3403, -0.0564, 0.0893, 0.0788, 0.1212, 0.035, 0.081, -0.0676, 0.2049, 0.118, -0.2046, -0.0684],
                    "t_hi_w": [1.0395, 0.6266, 0.6182, 0.824, 0.5397, 0.9929, 0.7739, 0.5773, 1.2453, 1.0082, 0.6375, 0.6048, 1.0227, 0.9413, 0.7684, 0.8032, 0.8542, 0.5479, 0.7013, 0.7349, 0.6159, 0.8272, 0.6236, 0.774, 0.5587, 0.9067, 0.6423, 0.9687, 0.9317, 0.9876, 0.8384, 0.9062, 0.6506, 0.8133, 0.5574, 0.7159, 0.7717, 0.8387, 0.9483, 1.0649, 0.6232, 0.8748, 0.8514, 0.8236, 0.8121, 0.7818, 0.5585, 0.8293, 0.7229, 0.8619, 0.9136, 0.6688, 0.8221, 1.485, 0.6512, 0.5698, 0.5941, 0.8607, 0.7474, 0.8082, 0.8942, 0.9067, 0.7716, 0.921, 0.7122, 0.9375, 0.6804, 0.8269, 0.8291, 0.6311, 1.0411, 0.9003, 0.68, 0.6727, 0.7638, 0.6534, 0.6625, 0.693, 0.4757, 1.1268, 1.0056, 0.8705, 0.6748, 0.5605, 0.8901, 0.7381, 0.6054, 0.5916, 0.3285, 0.7619, 0.8932, 0.9641, 0.9003, 0.9083, 0.6381, 0.9868, 0.8756, 0.564, 0.7205, 0.7901],
                    "r_lo_w": [-0.3631, -0.3805, -0.5309, -0.3434, -0.4568, -0.3489, -0.256, -0.4478, -0.5425, -0.3144, -0.543, -0.5603, -0.3943, -0.2453, -0.3679, -0.1178, -0.3363, -0.5352, -0.5568, -0.7192, -0.3165, -0.4132, -0.4761, -0.5231, -0.3602, -0.6456, -0.4388, -0.3077, -0.5857, -0.2092, -0.5223, -0.5974, -0.1944, -0.1515, -0.5857, -0.6572, -0.7207, -0.4005, -0.2917, -0.3527, -0.2977, -0.7095, -0.5558, -0.3016, -0.2193, -0.5285, -0.2525, -0.4389, -0.6142, -0.5199, -0.5782, -0.1925, -0.4519, -0.3726, -0.5594, -0.2109, -0.7604, -0.5434, -0.0426, -0.2926, -0.3848, -0.4416, -0.3916, -0.4098, -0.3034, -0.6183, -0.4295, -0.7, -0.1282, -0.4297, -0.4343, -0.2933, -0.3957, -0.1144, -0.3934, -0.3201, -0.2573, -0.3836, -0.2978, -0.314, -0.4309, -0.5014, -0.4062, -0.4359, -0.4956, -0.3529, -0.5928, -0.4182, -0.3155, -0.5728, -0.4546, -0.1935, -0.2228, -0.5729, -0.2559, -0.298, -0.406, -0.1148, -0.4627, -0.6043],
                    "r_hi_w": [0.5124, 0.1649, 0.2735, 0.384, 0.3491, 0.5763, 0.5234, 0.3296, 0.1659, 0.4903, 0.3135, 0.2714, 0.3812, 0.5608, 0.5117, 0.7166, 0.4712, 0.1685, 0.1918, -0.0964, 0.5217, 0.4284, 0.3983, 0.3138, 0.2929, 0.1334, 0.3794, 0.7176, 0.3403, 0.6001, 0.4305, 0.2624, 0.4908, 0.8607, 0.1962, 0.1439, 0.1314, 0.4623, 0.3699, 0.4863, 0.3997, 0.2234, 0.2731, 0.5033, 0.5535, 0.2235, 0.3908, 0.5105, 0.4479, 0.0672, 0.3701, 0.5747, 0.401, 0.5521, 0.3456, 0.5779, 0.1239, 0.3224, 0.6186, 0.5843, 0.521, 0.4175, 0.1252, 0.4782, 0.3786, 0.2326, 0.406, 0.0312, 0.6138, 0.3628, 0.1108, 0.4528, 0.3497, 0.7102, 0.3608, 0.445, 0.5289, 0.4586, 0.5032, 0.4898, 0.4654, 0.4334, 0.2346, 0.4508, 0.4329, 0.6182, 0.2797, 0.4618, 0.6375, 0.2268, 0.3577, 0.5238, 0.5141, 0.3341, 0.5476, 0.3274, 0.3504, 0.6603, 0.3811, 0.1094]
                }
            },
            "conclusion": "inconclusive"
        }
    ],
    "methods": [],
    "data": [
        {
            "id": "kin",
            "codebook": {
                "@context": "https://schema.org/",
                "@type": "Dataset",
                "name": "kin",
                "schemaVersion": "Psych-DS 0.1.0",
                "url": "https://osf.io/ewfhs/",
                "variableMeasured": [
                    {
                        "@type": "PropertyValue",
                        "name": "trust_self",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "trust_other",
                        "description": "Number of trusting moves towards self-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_self",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    },
                    {
                        "@type": "PropertyValue",
                        "name": "recip_other",
                        "description": "Number of reciprocating moves towards other-morphs",
                        "dataType": "int"
                    }
                ]
            },
            "data": {
                "trust_self": [1, 2, 2, 1, 1, 1, 1, 1, 2, 0, 2, 0, 1, 2, 2, 3, 2, 2, 1, 1, 2, 0, 0, 1],
                "trust_other": [1, 2, 2, 0, 1, 0, 0, 0, 1, 0, 1, 0, 1, 1, 1, 0, 1, 2, 2, 0, 0, 0, 2, 1],
                "recip_self": [0, 1, 3, 2, 1, 1, 1, 3, 3, 2, 3, 1, 1, 2, 3, 3, 3, 1, 1, 1, 3, 0, 3, 1],
                "recip_other": [1, 1, 2, 2, 3, 2, 1, 3, 3, 1, 3, 0, 1, 3, 3, 3, 3, 0, 3, 0, 1, 0, 3, 2]
            }
        }
    ],
    "analyses": [
        {
            "id": "trust",
            "code": "    t.test(kin$trust_self, kin$trust_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 2.5045,
                "parameter": 23,
                "p.value": 0.0198,
                "conf.int": [0.0213, 0.9787],
                "estimate": 0.5,
                "null.value": 0,
                "stderr": 0.1996,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$trust_self and kin$trust_other"
            }
        },
        {
            "id": "recip",
            "code": "    t.test(kin$recip_self, kin$recip_other, paired = TRUE, conf.level = 0.975)",
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": -0.2138,
                "parameter": 23,
                "p.value": 0.8326,
                "conf.int": [-0.5089, 0.4256],
                "estimate": -0.0417,
                "null.value": 0,
                "stderr": 0.1949,
                "alternative": "two.sided",
                "method": "Paired t-test",
                "data.name": "kin$recip_self and kin$recip_other"
            }
        },
        {
            "id": "norm",
            "code": [
                "    {",
                "        ts <- shapiro.test(kin$trust_self)$p.value",
                "        to <- shapiro.test(kin$trust_other)$p.value",
                "        rs <- shapiro.test(kin$recip_self)$p.value",
                "        ro <- shapiro.test(kin$recip_other)$p.value",
                "    }",
                "    list(ts = ts, to = to, rs = rs, ro = ro)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "ts": 0.0039,
                "to": 0.0002,
                "rs": 0.0004,
                "ro": 0.0006
            }
        },
        {
            "id": "trust_wilcox",
            "code": [
                "    wilcox.test(kin$trust_self, kin$trust_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 86.5,
                "parameter": {},
                "p.value": 0.0259,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$trust_self and kin$trust_other",
                "conf.int": [-0, 1.5001],
                "estimate": 1
            }
        },
        {
            "id": "recip_wilcox",
            "code": [
                "    wilcox.test(kin$recip_self, kin$recip_other, paired = TRUE, ",
                "        conf.level = 0.975, conf.int = TRUE)"
            ],
            "software": "R version 4.0.2 (2020-06-22)",
            "results": {
                "statistic": 36,
                "parameter": {},
                "p.value": 0.8366,
                "null.value": 0,
                "alternative": "two.sided",
                "method": "Wilcoxon signed rank test with continuity correction",
                "data.name": "kin$recip_self and kin$recip_other",
                "conf.int": [-1.5, 1],
                "estimate": -0
            }
        }
    ]
}

